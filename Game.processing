class wordBank { 
	constructor(word, hint) {
		this.word = word
		this.hint = hint
	}
}

class gradeOneWordBank { 
	constructor(word, image, hint) {
		this.word = word
		this.image = image
		this.hint = hint
		
  }
}

let gradeOneWords = [
		new gradeOneWordBank("cat", "l", "This animal meows!"),
		new gradeOneWordBank("dog", "l", "This animal woofs!"),
		new gradeOneWordBank("barn", "l", "This word is a thing that has horses and hay."),
		new gradeOneWordBank("farm", "l", "Old McDonald's had a ___"),
		new gradeOneWordBank("milk", "l", "A white liquid many people drink."),
		new gradeOneWordBank("seven", "l", "4 + 3"),
		new gradeOneWordBank("square", "l", "A 4 sided shape with equal side lengths.")
	]

var prompt = [];
var timeT;
var widthC;
var heightC;
var index;
var blankPrompt = [];
var milliPassed;
var timeReset = 0;
var cycle = 1;
var bombTime = 60
var catImg;
var dogImg;
var barnImg;

function preload() {
	catImg = loadImage('https://i.guim.co.uk/img/media/26392d05302e02f7bf4eb143bb84c8097d09144b/446_167_3683_2210/master/3683.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=49ed3252c0b2ffb49cf8b508892e452d');
	dogImg = loadImage('https://thumbs.dreamstime.com/b/beautiful-happy-reddish-havanese-puppy-dog-sitting-frontal-looking-camera-isolated-white-background-46868560.jpg');
	barnImg = loadImage('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRJf2eYmwnkzRzlOZwX0WQbo14LWZQIsA9KmA&usqp=CAU');
}

function setup() {
	createCanvas(windowWidth, windowHeight);
	background(25);
	//define resolution
	widthC = windowWidth;
	heightC = windowHeight;
	
	//define it once
	index = Math.floor(random(0,gradeOneWords.length))
	prompt = gradeOneWords[index]
	promptWord = prompt.word
	
	//know what the prompt is
	print(promptWord);
	text(prompt,100,100)

}

function draw() {
	milliPassed = millis()
	milliPassed = milliPassed - timeReset
	checkChangeRound();
	clear();
	promptPrint();
	labels();
	PlayerAvatars();
	bombDraw();
}

function PlayerAvatars() {
	fill(247, 52, 81)
	square(widthC/10, heightC/2 - widthC/10, widthC/5)
  fill(255)
	textSize(40)
	text("Player 1", widthC*3/20, heightC/2)
	fill(122, 94, 247)
	square(widthC - (widthC/5 + widthC/10), heightC/2 - widthC/10, widthC/5)
	fill(255)
	textSize(40)
	text("Player 2", widthC - (widthC*5/20), heightC/2)
}
// drawing out the prompt on screen
function promptPrint() {
	//round down because rounding up could result in error
	var tSize = 50
	for(var i = 0; i < promptWord.length; i++) {
		blankPrompt.push(prompt[i] == " " ? " " : "_");
		textSize(tSize)
		//approximation of length of text
		var textL = promptWord.length * (5 + tSize)
		//dent
		var textDent = (width - textL) / 2
		text(blankPrompt[i], textDent + (5 + tSize) * i, height/5)
}
}

function keyPressed() {
	// print("key pressed is", key);
  if (key >= 'a' && key <= 'z') { 
		print("You guessed", key);
		// Find all instances of key in prompt
		let incorrectGuesses = [];
		let result = [];
		for(var i = 0; i < promptWord.length; i++) {
    	if (promptWord[i] === key) {
				result.push(i);
				blankPrompt[i] = key;
			}
		}
		
		// Check results for matches
		if (result.length > 0) {
			// we found a match
			print("Found matches at indices", result);
		}
		else {
			print("NO MATCH!");
			
		}
  }
}

function labels() {
	
}

function checkChangeRound() {
	//check win condition
	for(var i = 0; i < promptWord.length; i++) {
		}
}

function bombDraw() {
	fill(100,100,100)
	circle(widthC/2, heightC/2, widthC/8)
	
	bombDeltaTime()
	
	//timer on bomb
	var bombTimeDisplay = bombTime - floor(milliPassed/1000)
	fill(255,255,255)
	textSize(75)
	text(bombTimeDisplay, width/2, height/2)
}

function bombDeltaTime() {
	print(floor(milliPassed/1000))
	if(milliPassed >= bombTime * 1000) {
		cycle++
		timeReset = (cycle-1) * milliPassed;
		
	}
}
